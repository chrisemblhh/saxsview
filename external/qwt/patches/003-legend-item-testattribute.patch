Index: qwt_plot_legenditem.cpp
===================================================================
--- qwt_plot_legenditem.cpp	(revision 383)
+++ qwt_plot_legenditem.cpp	(working copy)
@@ -81,22 +81,23 @@
 
 bool QwtLegendLayoutItem::hasHeightForWidth() const
 {
-    return !d_data.title().isEmpty();
+    return !isEmpty();
 }
 
 int QwtLegendLayoutItem::minimumHeightForWidth( int w ) const
 {
-    return d_legendItem->heightForWidth( d_data, w );
+    return isEmpty() ? 0 : d_legendItem->heightForWidth( d_data, w );
 }
 
 int QwtLegendLayoutItem::heightForWidth( int w ) const
 {
-    return d_legendItem->heightForWidth( d_data, w );
+    return isEmpty() ? 0 : d_legendItem->heightForWidth( d_data, w );
 }
 
 bool QwtLegendLayoutItem::isEmpty() const
 {
-    return false;
+    return !plotItem()->isVisible() 
+             || !plotItem()->testItemAttribute(QwtPlotItem::Legend);
 }
 
 QSize QwtLegendLayoutItem::maximumSize() const
@@ -106,7 +107,7 @@
 
 QSize QwtLegendLayoutItem::minimumSize() const
 {
-    return d_legendItem->minimumSize( d_data );
+    return isEmpty() ? QSize() : d_legendItem->minimumSize( d_data );
 }
 
 QSize QwtLegendLayoutItem::sizeHint() const
@@ -736,7 +737,9 @@
     const QwtPlotItem *plotItem, const QwtLegendData &data, 
     const QRectF &rect ) const
 {
-    Q_UNUSED( plotItem );
+    // No point trying to draw something that is not visible ...
+    if (!plotItem->isVisible())
+        return;
 
     const int m = d_data->itemMargin;
     const QRectF r = rect.toRect().adjusted( m, m, -m, -m );
