Index: ChangeLog
===================================================================
--- ChangeLog	(revision 234)
+++ ChangeLog	(working copy)
@@ -1,5 +1,11 @@
 2012-03-12  Daniel Franke  <dfranke@users.sourceforge.net>
 
+	* patches/003-legend-item-testattribute.patch: Also update the
+	legend's layout.
+	* qwt_plot_legenditem.cpp: Applied updated patch.
+
+2012-03-12  Daniel Franke  <dfranke@users.sourceforge.net>
+
 	* patches/003-legend-item-testattribute.patch: New.
 	* patches/004-set-colorbar-interval.patch: New.
 	* README: Updated.
Index: patches/003-legend-item-testattribute.patch
===================================================================
--- patches/003-legend-item-testattribute.patch	(revision 234)
+++ patches/003-legend-item-testattribute.patch	(working copy)
@@ -1,14 +1,16 @@
-Index: qwt_plot_legenditem.cpp
+Index: ChangeLog
 ===================================================================
---- qwt_plot_legenditem.cpp	(revision 233)
-+++ qwt_plot_legenditem.cpp	(working copy)
-@@ -547,7 +547,8 @@
-     const QwtPlotItem *plotItem, const QwtLegendData &data, 
-     const QRectF &rect ) const
- {
--    Q_UNUSED( plotItem );
-+    if ( !plotItem->testItemAttribute(QwtPlotItem::Legend) )
-+      return;
+--- ChangeLog	(revision 234)
++++ ChangeLog	(working copy)
+@@ -1,5 +1,11 @@
+ 2012-03-12  Daniel Franke  <dfranke@users.sourceforge.net>
  
-     const int m = d_data->itemMargin;
-     const QRectF r = rect.toRect().adjusted( m, m, -m, -m );
++	* patches/003-legend-item-testattribute.patch: Also update the
++	legend's layout.
++	* qwt_plot_legenditem.cpp: Applied updated patch.
++
++2012-03-12  Daniel Franke  <dfranke@users.sourceforge.net>
++
+ 	* patches/003-legend-item-testattribute.patch: New.
+ 	* patches/004-set-colorbar-interval.patch: New.
+ 	* README: Updated.
Index: patches/README
===================================================================
--- patches/README	(revision 234)
+++ patches/README	(working copy)
@@ -24,6 +24,9 @@
 The QwtPlotLegendItem does not check if an item requested not to be 
 included in the legend via "setItemAttribute(QwtPlotItem::Legend, false)".
 
+Also the layout doesn't hide layout items that are empty. Second change
+updates the definition of isEmpty(), minimumSize() and related.
+
 This patch breaks compability with the QwtLegend, but as we are not
 interested in that any more, so what. It simplifies the client code
 significantly.
Index: qwt_plot_legenditem.cpp
===================================================================
--- qwt_plot_legenditem.cpp	(revision 234)
+++ qwt_plot_legenditem.cpp	(working copy)
@@ -81,22 +81,23 @@
 
 bool QwtLegendLayoutItem::hasHeightForWidth() const
 {
-    return !d_data.title().isEmpty();
+    return !isEmpty();
 }
 
 int QwtLegendLayoutItem::minimumHeightForWidth( int w ) const
 {
-    return d_legendItem->heightForWidth( d_data, w );
+    return isEmpty() ? 0 : d_legendItem->heightForWidth( d_data, w );
 }
 
 int QwtLegendLayoutItem::heightForWidth( int w ) const
 {
-    return d_legendItem->heightForWidth( d_data, w );
+    return isEmpty() ? 0 : d_legendItem->heightForWidth( d_data, w );
 }
 
 bool QwtLegendLayoutItem::isEmpty() const
 {
-    return false;
+    return !plotItem()->isVisible() 
+             || !plotItem()->testItemAttribute(QwtPlotItem::Legend);
 }
 
 QSize QwtLegendLayoutItem::maximumSize() const
@@ -106,7 +107,7 @@
 
 QSize QwtLegendLayoutItem::minimumSize() const
 {
-    return d_legendItem->minimumSize( d_data );
+    return isEmpty() ? QSize() : d_legendItem->minimumSize( d_data );
 }
 
 QSize QwtLegendLayoutItem::sizeHint() const
